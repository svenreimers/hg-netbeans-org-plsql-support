<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="plsql support" basedir="." default="netbeans">
    <description>Builds the module suite plsql support.</description>
    
    <property file="nbproject/private/platform-private.properties"/>
    <property file="build.properties"/>
    <property file="nbproject/platform.properties"/>
    
    <property name="use.timestamp" value="true"/>
    <property name="timestamp.file" value=".lastModified"/>
    
    <property environment="env"/>
    <condition property="build.id" value="${env.BUILD_ID}" else="dev">
        <isset property="env.BUILD_ID"/>
    </condition>
    
    <target name="calculate-netbeans-url" unless="skip.calculation">
        <get src="${netbeans.base.url}" dest="netbeans.html" usetimestamp="${use.timestamp}" verbose="true" ignoreerrors="${offline}"/>
        <loadfile srcfile="netbeans.html" property="netbeans.binaries.url">
            <filterchain>
                <tokenfilter>
                    <containsregex pattern=".*href=&quot;(netbeans-[a-z0-9-.]*javaee\.zip)&quot;.*" replace="${netbeans.base.url}/\1" flags="im"/>
                </tokenfilter>
            </filterchain>
        </loadfile>
    </target>

    <target name="download-binaries" depends="calculate-netbeans-url" unless="skip.download">
        <parallel>
            <get src="${netbeans.binaries.url}" dest="netbeans.zip" usetimestamp="${use.timestamp}" verbose="false" ignoreerrors="${offline}"/>
        </parallel>
     </target>
     
     <target name="check-binaries">
        <condition property="binaries.uptodate">
            <and>
                <uptodate targetfile="${timestamp.file}">
                    <srcfiles dir="." includes="*.zip"/>
                </uptodate>
            </and>            
        </condition>
     </target>     

     <target name="unzip-binaries" unless="binaries.uptodate">
        <echo message="New binaries downloaded - re-installing."/>
        <delete dir="ide"/>
        <unzip src="netbeans.zip" dest="ide"/>
        <touch file="${timestamp.file}"/>        
    </target>
    
    <target name="update-binaries" depends="download-binaries,check-binaries,unzip-binaries"/>
    
    <target name="check-harness">
        <echo>nbplatform.default.netbeans.dest.dir resolved to ${nbplatform.default.netbeans.dest.dir}</echo>
        <echo>nbplatform.default.harness.dir resolved to ${nbplatform.default.harness.dir}</echo>
        <fail message="Harness is missing. Specify nbplatform.default.netbeans.dest.dir={path-to-your-sources-root}/ide/netbeans in nbproject/private/platform-private.propetries">
            <condition>
                <not>
                    <available file="${nbplatform.default.harness.dir}" type="dir"/>
                </not>
            </condition>
        </fail>
    </target>
    
    <target name="build-suite" depends="check-harness">
        <ant antfile="build-suite.xml" target="build" inheritAll="false"/>
    </target>
    
    <target name="printinfo">
      <property environment="env" />
      <echo message="${env.BUILD_TAG}"/>
      <echo message="${env.JAVA_HOME}"/>
    </target>
    
    <target name="netbeans" depends="update-binaries,build-suite"/>
    <target name="build" depends="netbeans"/>
    
    <target name="clean">
        <echo>nbplatform.default.netbeans.dest.dir resolved to ${nbplatform.default.netbeans.dest.dir}</echo>
        <echo>nbplatform.default.harness.dir resolved to ${nbplatform.default.harness.dir}</echo>
        <ant antfile="build-suite.xml" target="clean" inheritAll="false"/>
    </target>
    
    <target name="real-clean" depends="clean">
        <echo message="Cleaning netbeans IDE"/>
        <delete dir="build"/>
        <delete dir="dist"/>
        <delete dir="ide"/>
        <delete>
            <fileset dir="." includes="*.zip"/>
        </delete>
        <delete>
            <fileset dir="." includes="*.html"/>
        </delete>
        <delete file="${timestamp.file}"/>
    </target>

    <target name="nbms" depends="update-binaries">
        <ant antfile="build-suite.xml" target="nbms" inheritAll="false"/>
    </target>
    
    <target name="daily" depends="update-binaries,build">
        <mkdir dir="dist"/>
        <zip destfile="dist/netbeans-701-${build.id}-plsql.zip" duplicate="add">
            <zipfileset dir="build/cluster" prefix="netbeans/extra"/>
            <zipfileset dir="ide/netbeans" prefix="netbeans"/>
        </zip>
    </target>

   <property name="ant.contrib.jar" value="${basedir}/Libraries/ThirdParty/ant/ant-contrib-1.0b3.jar" />
   <taskdef resource="net/sf/antcontrib/antcontrib.properties">
      <classpath>
         <pathelement location="${ant.contrib.jar}"/>
      </classpath>
   </taskdef>

   <path id="manifest.file.paths">
      <fileset dir="${basedir}">
         <include name="**/manifest.mf"/>
<!--            <exclude name="**/Libraries/ThirdParty/**"/>-->
      </fileset>
   </path>

   <target name="-find-modules-for-update" description="find all modules in suite that has changes since last release" >
      <loadproperties srcfile="nbproject/project.properties" />
      <mkdir dir="build"/>
      <delete file="build/nbms_update.properties" />

      <echo level="verbose">${modules}</echo>

      <foreach param="module.path" target="-vcs-log" list="${modules}" delimiter=":"/>
      <propertyfile  file="build/nbms_update.properties">
         <entry key="selected.modules" default="" operation="+" value="plsql-support.kit/manifest.mf:"/>
      </propertyfile>
<!--        <echoproperties srcfile="build/nbms_update.properties" />-->
   </target>

   <target name="-vcs-log" description="use mercurial to check if the last commit was a release commit">
      <echo level="info">module.path: ${module.path}</echo>

        <!-- find out revision number of HEAD, need svn.exe installed on local machine -->
      <exec executable="hg" outputproperty="hglog.out" >
         <arg line="log -l 1 --style compact '${module.path}'"/>
      </exec>
      <echo level="verbose">${hglog.out}</echo>

      <echo level="verbose">${force.increment}</echo>
      <condition property="nbm.update.needed">
         <or>
            <not>
               <contains string="${hglog.out}" substring="automated commit from "/>
            </not>
            <istrue value="${force.increment}" />
         </or>
      </condition>
      <echo level="verbose">nbm.update.needed=${nbm.update.needed}</echo>
      <antcall target="-concat-modules"  inheritall="true" />
   </target>

   <target name="-concat-modules" if="nbm.update.needed" description="Concatinate the selected module paths and put in .properties file">
      <echo>Module needs to be updated: ${nbm.update.needed}</echo>
      <echo level="info">module.path: ${module.path}</echo>
      <propertyfile  file="build/nbms_update.properties">
         <entry key="selected.modules" default="" operation="+" value="${module.path}/manifest.mf:"/>
      </propertyfile>
   </target>

   <target name="show-current-versions" description="show current specification versions for all modules">
      <foreach param="manifest.file" target="current-version" >
         <path refid="manifest.file.paths"/>
      </foreach>
   </target>

   <target name="current-version" depends="-read-version" description="show current specification.version">
   </target>

   <target name="incr-major" description="increment major version for modules with changes" depends="-find-modules-for-update">
      <loadproperties srcfile="build/nbms_update.properties" />
      <echo>selected.modules=${selected.modules}</echo>
      <foreach param="manifest.file" target="-major" >
         <path path="${selected.modules}"/>
      </foreach>
      <delete file="build_info.properties" />
   </target>

   <target name="incr-minor" description="increment minor version for modules with changes" depends="-find-modules-for-update">
      <loadproperties srcfile="build/nbms_update.properties" />
      <echo>selected.modules=${selected.modules}</echo>
      <foreach param="manifest.file" target="-minor" >
         <path path="${selected.modules}"/>
      </foreach>
      <delete file="build_info.properties" />
   </target>

   <target name="incr-revision" description="increment revision version for modules with changes" depends="-find-modules-for-update">
      <loadproperties srcfile="build/nbms_update.properties" />
      <echo>selected.modules=${selected.modules}</echo>
      <foreach param="manifest.file" target="-revision" >
         <path path="${selected.modules}"/>
      </foreach>
      <delete file="build_info.properties" />
   </target>

   <target name="-read-version">
      <echo level="verbose">manifest.file: ${manifest.file}</echo>
      <property file="${manifest.file}"></property>
      <property name="specification.version" value="${OpenIDE-Module-Specification-Version}"/>
      <echo>OpenIDE-Module: ${OpenIDE-Module}</echo>
      <echo>Current build number:${specification.version}</echo>
      <propertyregex property="major.version" input="${specification.version}"  regexp="(\d+)\.(\d+)\.(\d+)$" select="\1" />
      <echo level="verbose">major: ${major.version}</echo>
      <propertyregex property="minor.version" input="${specification.version}"  regexp="(\d+)\.(\d+)\.(\d+)$" select="\2" />
      <echo level="verbose">minor: ${minor.version}</echo>
      <propertyregex property="revision.version" input="${specification.version}"  regexp="(\d+)\.(\d+)\.(\d+)$" select="\3" />
      <echo level="verbose">revision: ${revision.version}</echo>
      <propertyfile file="build_info.properties">
         <entry key="build.major.number" type="int" value="${major.version}" />
         <entry key="build.minor.number" type="int" value="${minor.version}" />
         <entry key="build.revision.number" type="int" value="${revision.version}" />
      </propertyfile>
   </target>

   <target name="-revision" depends="-read-version">
      <propertyfile  file="build_info.properties">
         <entry key="build.revision.number" type="int" operation="+" value="1"/>
      </propertyfile>

      <loadproperties srcfile="build_info.properties" />
      <manifest file="${manifest.file}" mode="update">
         <attribute name="OpenIDE-Module-Specification-Version" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
      </manifest>
      <replaceregexp match="(dependency\D*code-name-base\W${OpenIDE-Module}\W/\D*)(\d+\.\d+\.\d+)" byline="false"
      file="plsql-support.kit/nbproject/project.xml" replace="\1${build.major.number}.${build.minor.number}.${build.revision.number}"/>
   </target>

   <target name="-minor" depends="-read-version">
      <propertyfile  file="build_info.properties">
         <entry key="build.minor.number" type="int" operation="+" value="1" />
         <entry key="build.revision.number" type="int" value="0" />
      </propertyfile>
      <loadproperties srcfile="build_info.properties" />

      <manifest file="${manifest.file}" mode="update">
         <attribute name="OpenIDE-Module-Specification-Version" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
      </manifest>
      <replaceregexp match="(dependency\D*code-name-base\W${OpenIDE-Module}\W/\D*)(\d+\.\d+\.\d+)" byline="false"
      file="plsql-support.kit/nbproject/project.xml" replace="\1${build.major.number}.${build.minor.number}.${build.revision.number}"/>
   </target>

   <target name="-major" depends="-read-version">
      <propertyfile  file="build_info.properties">
         <entry key="build.major.number" type="int" operation="+" value="1" />
         <entry key="build.minor.number" type="int" value="0" />
         <entry key="build.revision.number" type="int" value="0" />
      </propertyfile>
      <!--<echoproperties srcfile="build_info.properties" />-->
      <loadproperties srcfile="build_info.properties" />

      <manifest file="${manifest.file}" mode="update" >
         <attribute name="OpenIDE-Module-Specification-Version" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
      </manifest>
      <replaceregexp match="(dependency\D*code-name-base\W${OpenIDE-Module}\W/\D*)(\d+\.\d+\.\d+)" byline="false"
      file="plsql-support.kit/nbproject/project.xml" replace="\1${build.major.number}.${build.minor.number}.${build.revision.number}"/>
   </target>

   <target name="all">
      <propertyfile  file="build_info.properties">
         <entry key="build.major.number" type="int" operation="+" value="1" />
         <entry key="build.minor.number" type="int" operation="+" value="1" />
         <entry key="build.revision.number" type="int" operation="+" value="1" />
      </propertyfile>
   </target>

   <target name="echo-manifest" description="echo kit version that is found in manifest. Used by hudson" >
      <echoproperties srcfile="plsql-support.kit/manifest.mf"/>
   </target>

</project>
