-----------------------------------------------------------------------------
--
--  Logical unit: TimeCardRep
--
--  Report:       TimeCard
--
--  IFS/Design Template Version 2.5
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
-------------------- PACKAGE SPECIFICATION ----------------------------------
-----------------------------------------------------------------------------

PROMPT Creating TIME_CARD_RPI specification

CREATE OR REPLACE PACKAGE TIME_CARD_RPI AS

lu_name_ CONSTANT VARCHAR2(25) := 'TimeCar';

PROCEDURE Execute_Report (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 );

--PROCEDURE Init;

END TIME_CARD_RPI;
/
SHOW ERROR

-----------------------------------------------------------------------------
-------------------- VIEWS FOR REPORT META DATA -----------------------------
-----------------------------------------------------------------------------

PROMPT Creating report view TIME_CARD_REP

CREATE OR REPLACE VIEW TIME_CARD_REP AS
SELECT NULL sunday,
       NULL saturday,
       NULL friday,
       NULL thursday,
       NULL wednesday,
       NULL tuesday,
       NULL monday,
       NULL account_week,
       NULL account_year,
       NULL emp_name,
       NULL emp_no,
       NULL company_id,
       NULL row_num,
       NULL type,
       NULL week_start_day
FROM   dual
WITH   read only;

COMMENT ON TABLE TIME_CARD_REP
   IS 'LU=TimeCardRep^PROMPT=Time Card^MODULE=TIMREP^';

COMMENT ON COLUMN TIME_CARD_REP.sunday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Sunday^TITLE=Sunday^';
COMMENT ON COLUMN TIME_CARD_REP.saturday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Saturday^TITLE=Saturday^';
COMMENT ON COLUMN TIME_CARD_REP.friday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Friday^TITLE=Friday^';
COMMENT ON COLUMN TIME_CARD_REP.thursday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Thursday^TITLE=Thursday^';
COMMENT ON COLUMN TIME_CARD_REP.wednesday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Wednesday^TITLE=Wednesday^';
COMMENT ON COLUMN TIME_CARD_REP.tuesday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Tuesday^TITLE=Tuesday^';
COMMENT ON COLUMN TIME_CARD_REP.monday
   IS 'FLAGS=A----^DATATYPE=STRING(65)^PROMPT=Monday^TITLE=Monday^';
COMMENT ON COLUMN TIME_CARD_REP.account_week
   IS 'FLAGS=A----^DATATYPE=NUMBER^PROMPT=Account Week^TITLE=Account Week^';
COMMENT ON COLUMN TIME_CARD_REP.account_year
   IS 'FLAGS=A----^DATATYPE=NUMBER^PROMPT=Account Year^TITLE=Account Year^';
COMMENT ON COLUMN TIME_CARD_REP.emp_name
   IS 'FLAGS=A----^DATATYPE=STRING(40)^PROMPT=Emp Name^TITLE=Emp Name^';
COMMENT ON COLUMN TIME_CARD_REP.emp_no
   IS 'FLAGS=A----^DATATYPE=STRING(11)^PROMPT=Emp No^TITLE=Emp No^';
COMMENT ON COLUMN TIME_CARD_REP.company_id
   IS 'FLAGS=A----^DATATYPE=STRING(20)^PROMPT=Company Id^TITLE=Company Id^';
COMMENT ON COLUMN TIME_CARD_REP.row_num
   IS 'FLAGS=A----^DATATYPE=NUMBER^PROMPT=Row Num^TITLE=Row Num^';
COMMENT ON COLUMN TIME_CARD_REP.type
   IS 'FLAGS=A----^DATATYPE=STRING(2)^PROMPT=Type^TITLE=Type^';
COMMENT ON COLUMN TIME_CARD_REP.week_start_day
   IS 'FLAGS=A----^DATATYPE=NUMBER^PROMPT=Week Start Day^TITLE=Week Start Day^';

-----------------------------------------------------------------------------
-------------------- REPORT REGISTRATION ------------------------------------
-----------------------------------------------------------------------------

BEGIN
   Report_SYS.Define_Report_('TIME_CARD_REP', 'TIMREP', 'TimeCardRep', 'Time Card', 'dual', 'TIME_CARD_RPI..Execute_Report', 0);
   --Report_SYS.Define_Report_Layout_('TIME_CARD_REP', 'TimeCardRep.xsl', 'Landscape', 'DYNAMIC', NULL, 'DESIGNER');
   Report_SYS.Define_Report_Text_('TIME_CARD_REP', 'TXWEEKSTARTDAY', 'Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday');
   Report_SYS.Define_Report_Text_('TIME_CARD_REP', 'TXTIMECARD', 'Time Card');
   Report_SYS.Refresh_('TIME_CARD_REP');
END;
/

-----------------------------------------------------------------------------
-------------------- PACKAGE IMPLEMENTATION ---------------------------------
-----------------------------------------------------------------------------

PROMPT Creating TIME_CARD_RPI implementation

SAVEPOINT A;

CREATE OR REPLACE PACKAGE BODY TIME_CARD_RPI IS

PROCEDURE Execute_Report (
   report_attr_    IN VARCHAR2,
   parameter_attr_ IN VARCHAR2 )
IS
   result_key_               NUMBER;
   
   
   xml_                      CLOB;

   CURSOR get_time_card IS
      SELECT
         NULL            sunday,   
         NULL            saturday,   
         NULL            friday,   
         NULL            thursday,   
         NULL            wednesday,   
         NULL            tuesday,   
         NULL            monday,   
         to_number(NULL) account_week,   
         to_number(NULL) account_year,   
         NULL            emp_name,   
         NULL            emp_no,   
         NULL            company_id,   
         to_number(NULL) row_num,   
         NULL            type,   
         to_number(NULL) week_start_day
      FROM dual;

BEGIN
   --General_SYS.Init_Method(lu_name_, 'TIME_CARD_RPI', 'Execute_Report');
   result_key_ := Client_SYS.Attr_Value_To_Number(Client_SYS.Get_Item_Value('RESULT_KEY', report_attr_));

   
   Xml_Record_Writer_SYS.Create_Report_Header(xml_,'TIME_CARD_REP','Time Card');
   Xml_Record_Writer_SYS.Start_Element(xml_, 'TIME_CARDS');
   FOR time_card_ IN get_time_card LOOP
      Xml_Record_Writer_SYS.Start_Element(xml_, 'TIME_CARD');
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SUNDAY', time_card_.sunday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'SATURDAY', time_card_.saturday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'FRIDAY', time_card_.friday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'THURSDAY', time_card_.thursday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'WEDNESDAY', time_card_.wednesday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'TUESDAY', time_card_.tuesday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'MONDAY', time_card_.monday);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'ACCOUNT_WEEK', time_card_.account_week);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'ACCOUNT_YEAR', time_card_.account_year);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'EMP_NAME', time_card_.emp_name);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'EMP_NO', time_card_.emp_no);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'COMPANY_ID', time_card_.company_id);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'ROW_NUM', time_card_.row_num);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'TYPE', time_card_.type);
      Xml_Record_Writer_SYS.Add_Element(xml_, 'WEEK_START_DAY', time_card_.week_start_day);
      Xml_Record_Writer_SYS.End_Element(xml_, 'TIME_CARD');
   END LOOP;
   Xml_Record_Writer_SYS.End_Element(xml_, 'TIME_CARDS');
   Xml_Record_Writer_SYS.End_Element(xml_,'TIME_CARD_REP');

   Report_SYS.Finish_Xml_Report('TIME_CARD_REP',result_key_,xml_);
END Execute_Report;

-----------------------------------------------------------------------------
-------------------- FOUNDATION1 METHODS ------------------------------------
-----------------------------------------------------------------------------
-- Init
--   Dummy procedure that can be called at database startup to ensure that
--   this package is loaded into memory for performance reasons only.
-----------------------------------------------------------------------------

PROCEDURE Init
IS
BEGIN
   NULL;
END Init;

END TIME_CARD_RPI;
/

ROLLBACK TO A;

SHOW ERROR