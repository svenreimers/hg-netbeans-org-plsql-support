/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */
package org.netbeans.modules.plsqlsupport.options;

import java.awt.event.ItemEvent;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JTextField;
import org.openide.util.NbPreferences;

public final class GeneralPanel extends javax.swing.JPanel {

    private final GeneralOptionsPanelController controller;

    GeneralPanel(GeneralOptionsPanelController controller) {
        this.controller = controller;
        initComponents();               
      // TODO listen to changes in form fields and call controller.changed()
    } 

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbDeployAllDatabasesAutomatically = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        cbExpandFolds = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        cbAutoCommit = new javax.swing.JCheckBox();
        cbAutoSelect = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spBuffSize = new javax.swing.JSpinner();
        cbDefaultBuffSize = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.Database.Border.Title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbDeployAllDatabasesAutomatically, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cbDeployAllDatabasesAutomatically.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbDeployAllDatabasesAutomatically)
                .addContainerGap(215, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(cbDeployAllDatabasesAutomatically)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.PlSqlEditor.Border.Title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbExpandFolds, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cbExpandFolds.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbExpandFolds)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cbExpandFolds)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jPanel3.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbAutoCommit, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cbAutoCommit.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbAutoSelect, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cbAutoSelect.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbAutoCommit)
                    .addComponent(cbAutoSelect))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(cbAutoCommit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbAutoSelect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.PlSqlOutput.Border.Title"), javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION)); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.PlSqlOutput.label")); // NOI18N

        spBuffSize.getEditor().setAlignmentY(LEFT_ALIGNMENT);
        spBuffSize.setModel(new javax.swing.SpinnerNumberModel(20000, 0, 10000000, 2000));
        spBuffSize.setInputVerifier(new outputBufferSizeInputVerifier());

        org.openide.awt.Mnemonics.setLocalizedText(cbDefaultBuffSize, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cbDefaultBuffSize.text")); // NOI18N
        cbDefaultBuffSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                defaultBuffSizeItemListener(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDefaultBuffSize)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(spBuffSize, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(cbDefaultBuffSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spBuffSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.Database.Border.Title")); // NOI18N
        jPanel2.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.PlSqlEditor.Border.Title")); // NOI18N
        jPanel3.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jPanel3.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void defaultBuffSizeItemListener(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_defaultBuffSizeItemListener
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            spBuffSize.setEnabled(false);
            spBuffSize.setValue(20000);
        } else {
            spBuffSize.setEnabled(true);
        }
    }//GEN-LAST:event_defaultBuffSizeItemListener

    void load() {
        cbDeployAllDatabasesAutomatically.setSelected(NbPreferences.forModule(GeneralPanel.class).getBoolean(OptionsUtilities.AUTO_DEPLOY_ALL_DATABASES_KEY, true));
        cbExpandFolds.setSelected(NbPreferences.forModule(GeneralPanel.class).getBoolean(OptionsUtilities.PLSQL_EXPAND_FOLDS_KEY, false));
        cbAutoCommit.setSelected(NbPreferences.forModule(GeneralPanel.class).getBoolean(OptionsUtilities.COMMAND_WINDOW_AUTO_COMMIT_KEY, false));
        cbAutoSelect.setSelected(NbPreferences.forModule(GeneralPanel.class).getBoolean(OptionsUtilities.COMMAND_WINDOW_AUTO_SELECT_KEY, false)); 
        
        int buffSize = NbPreferences.forModule(GeneralPanel.class).getInt(OptionsUtilities.PLSQL_OUTPUT_BUFFER_KEY, 20000);
        spBuffSize.setValue(buffSize);
        spBuffSize.setEnabled(buffSize!=20000); 
        cbDefaultBuffSize.setSelected(buffSize==20000); 
    }

    void store() {
        NbPreferences.forModule(GeneralPanel.class).putBoolean(OptionsUtilities.AUTO_DEPLOY_ALL_DATABASES_KEY, cbDeployAllDatabasesAutomatically.isSelected());
        NbPreferences.forModule(GeneralPanel.class).putBoolean(OptionsUtilities.PLSQL_EXPAND_FOLDS_KEY, cbExpandFolds.isSelected());
        NbPreferences.forModule(GeneralPanel.class).putBoolean(OptionsUtilities.COMMAND_WINDOW_AUTO_COMMIT_KEY, cbAutoCommit.isSelected());
        NbPreferences.forModule(GeneralPanel.class).putBoolean(OptionsUtilities.COMMAND_WINDOW_AUTO_SELECT_KEY, cbAutoSelect.isSelected());
        NbPreferences.forModule(GeneralPanel.class).putInt(OptionsUtilities.PLSQL_OUTPUT_BUFFER_KEY, Integer.parseInt(spBuffSize.getValue().toString()));
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    private class outputBufferSizeInputVerifier extends InputVerifier {
        //buffer size minimum - 2000 , default - 20000, unlimited - 0 
        final int defaultBuffSize = 20000;
        @Override
        public boolean verify(JComponent input) {
            JTextField textField = (JTextField) input;
            String content = textField.getText();
            if (null != content && content.length() != 0) {
                try {
                    int value = Integer.parseInt(content); 
                    
                    if ((value < 0) || (value > 1 && value < 1999) ) {
                        spBuffSize.setValue(defaultBuffSize);
                    } 
                } catch (NumberFormatException e) {
                    spBuffSize.setValue(defaultBuffSize);
                }
            }else{
                spBuffSize.setValue(defaultBuffSize);
            }
            return true;
        }        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbAutoCommit;
    private javax.swing.JCheckBox cbAutoSelect;
    private javax.swing.JCheckBox cbDefaultBuffSize;
    private javax.swing.JCheckBox cbDeployAllDatabasesAutomatically;
    private javax.swing.JCheckBox cbExpandFolds;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner spBuffSize;
    // End of variables declaration//GEN-END:variables
}
